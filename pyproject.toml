# ==============================================================================
# The [project] table defined by Official python.org
#
# Read: https://packaging.python.org/en/latest/guides/writing-pyproject-toml/
# ==============================================================================
[project]
name = "pywf_open_source"
# Increment version before each release - follow `semantic versioning <https://semver.org/>`_
# Currently, poetry 2.1.X doesn't support dynamic versioning
# (Read https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#version)
# So this value has to be aligned with the one in ``pywf_open_source/_version.py``
version = "0.0.1"
description = "Python Workflow for open source project."
# Read https://dev-exp-share.readthedocs.io/en/latest/search.html?q=Pick+An+Open+Source+License+For+Python+Project&check_keywords=yes&area=default
# To pick a license and update the ``license``, ``classifier`` field in ``pyproject.toml``
# And also update the ``LICENSE.txt`` file in the git repo.
license = "MIT"
license-files = ["LICENSE.txt", "AUTHORS.rst"]
authors = [
    { name = "Sanhe Hu", email = "husanhe@gmail.com" },
]
maintainers = [
    { name = "Sanhe Hu", email = "husanhe@gmail.com" },
]
keywords = []
readme = "README.rst"
# Files to include in the package distribution
include = [
    "*.txt",
    "*.rst",
]
# Files to exclude from the package
exclude = [
    "*.pyc",
    "*.pyo",
    "pywf_open_source/docs/*",
    "pywf_open_source/tests/*",
]
requires-python = ">=3.11,<4.0"
# Full list of classifiers: https://pypi.org/classifiers/
classifier = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Operating System :: Unix",
    # Note: classfier like "Programming Language :: Python :: 3 :: Only",
    # "Programming Language :: Python :: 3.X" is no longer needed,
    # because we have ``requires-python`` field.
]

# ------------------------------------------------------------------------------
# Core Dependencies
# ------------------------------------------------------------------------------
dependencies = [
    "requests>=2.23.3,<3.0.0",
    "PyGithub>=2.5.0,<3.0.0"
]

# ------------------------------------------------------------------------------
# Optional dependency that can be used in ``pip install ${your_project_name}[${feature_name}]``
# Sometime this is also called "extras"
# Read: https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#dependencies-optional-dependencies
# ------------------------------------------------------------------------------
[project.optional-dependencies]


[project.urls]
Homepage = "https://github.com/MacHu-GWU/pywf_open_source-project"
Documentation = "https://pywf-open-source.readthedocs.io/en/latest/"
Repository = "https://github.com/MacHu-GWU/pywf_open_source-project"
Issues = "https://github.com/MacHu-GWU/pywf_open_source-project/issues"
Changelog = "https://github.com/MacHu-GWU/pywf_open_source-project/blob/main/release-history.rst"
Download = "https://pypi.org/pypi/pywf-open-source#files"

# For command line interface, read: https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#creating-executable-scripts
[project.scripts]

# ==============================================================================
# Poetry dependency groups. Note that this is not the "extras" dependency defined by Python.
# It is a poetry only feature that totally different from ``[project.optional-dependencies]``
#
# Read: https://python-poetry.org/docs/pyproject/#dependencies-and-dependency-groups
# ==============================================================================
# Dev dependenceies
[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
twine = ">=6.0.0,<7.0.0"
wheel = ">=0.45.0,<1.0.0"
build = ">=1.2.1,<2.0.0"
rich = ">=13.8.1,<14.0.0"

# ------------------------------------------------------------------------------
# Documentation build dependenceies
# ------------------------------------------------------------------------------
[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
Sphinx = ">=8.2.3,<9.0.0"
# add copy button to code block
sphinx-copybutton = ">=0.5.2,<1.0.0"
# add additional design pattern to sphinx
sphinx-design = ">=0.6.1,<1.0.0"
# enable jinja syntax in reStructuredText
sphinx-jinja = ">=2.0.2,<3.0.0"
# the furo sphinx theme
furo = "2024.8.6"
# syntax highlight
pygments = ">=2.18.0,<3.0.0"
# iPython
ipython = ">=8.34.0,<9.0.0"
# add jupyter notebook in sphinx doc
nbsphinx = ">=0.8.12,<1.0.0"
# generate reStructuredText in Python
rstobj = "1.2.1"
# automaticall generate .. toctree directives and API reference doc
docfly = "2.0.3"

# ------------------------------------------------------------------------------
# Test dependenceies
# ------------------------------------------------------------------------------
[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = ">=8.2.2,<9.0.0" # Testing framework
pytest-cov = ">=6.0.0,<7.0.0" # Coverage reporting

# ------------------------------------------------------------------------------
# Automation (devops) dependenceies
# ------------------------------------------------------------------------------
[tool.poetry.group.auto]
optional = true

[tool.poetry.group.auto.dependencies]

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.9.0,<2.0.0"

# python workflow tool config
[tool.pywf]
# The specific python version you use for local development
dev_python = "3.11.8"
# github.com account name (for unit test)
github_account = "MacHu-GWU"
# github.com personal access token
github_token_name = "sanhe-dev"
# codecov.io (for code coverage test report) account name
# If you use GitHub account to login codecov.io, then it is the same as your github account
codecov_account = "MacHu-GWU"
# Codecov personal access token
codecov_token_name = "sanhe-dev"
# readthedocs.org user name (for documentation hosting)
readthedocs_username = "machugwu"
# Readthedocs project name, usually it is the same as your project name
readthedocs_project_name = "cookiecutter_pywf_open_source_demo"
# Readthedocs personal access token
readthedocs_token_name = "sanhe-dev"

# Read: https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#declaring-the-build-backend
[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"
